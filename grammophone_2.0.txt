# Type a grammar here:


#Sx -> A_aug ; Sx.
#Sx -> A_sim ; Sx.
#Sx -> A_dro ; Sx.
Sx -> A_aug ;.
Sx -> A_sim ;.
Sx -> A_dro ;.

A_aug -> ID Ao Ex.
A_sim -> ID = Ex.
A_dro -> ID Dc.

Ao -> +=.
Ao -> -=.
Ao -> *=.
Ao -> /=.
Ao -> %=.
Ao -> >>=.
Ao -> <<=.
Ao -> &=.
Ao -> o=.
Ao -> ^=.
Ao -> **=.

Ex -> Or_l.

#Parte comparaciones lógicas
Or_l -> Or_l oo And_l.
Or_l -> And_l.
 
And_l -> And_l && Not_l.
And_l -> Not_l.

Not_l -> ! Not_l.
Not_l -> Lx.

Lx -> Lx Lo Or_b.
Lx -> Or_b.

Lo -> <.
Lo -> >.
Lo -> <=.
Lo -> >=.
Lo -> ==.
Lo -> !=.

#Parte de operaciones binarias
Or_b -> Or_b o Xor_b.
Or_b -> Xor_b.

Xor_b -> Xor_b ^ And_b.
Xor_b -> And_b.

And_b -> And_b & Shift.
And_b -> Shift.

Shift -> Shift >> Ax.
Shift -> Shift << Ax.
Shift -> Ax.

#Parte aritmética

Ax -> Ax + Af.
Ax -> Ax - Af.
Ax -> Af.

Af -> Af * Ap.
Af -> Af % Ap.
Af -> Af / Ap.
Af -> Ap.

Ap -> At ** Ap.
Ap -> At.

At -> Si NUMBER| STRING | Si ID | Si (Ex).

Si -> +.
Si -> -.
Si -> ~.
Si -> .


#Comandos Drone
Dc -> = **(STRING,NUMBER)**.
Dc -> -< (Ex,Ex,Ex).
Dc -> -) (Ex,Ex,Ex).